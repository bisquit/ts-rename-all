{
  "name": "ts-rename-all",
  "private": true,
  "description": "Once rename, then others are also renamed the same way.",
  "version": "0.1.2",
  "license": "MIT",
  "type": "module",
  "engines": {
    "node": ">=18.0.0"
  },
  "scripts": {
    "build": "pnpm turbo build",
    "bump": "bumpp -r",
    "release": "pnpm build && pnpm publish -r --access public"
  },
  "devDependencies": {
    "@types/react": "^18.2.18",
    "@typescript-eslint/eslint-plugin": "^6.2.1",
    "@typescript-eslint/parser": "^6.2.1",
    "bumpp": "^9.1.1",
    "eslint": "^8.43.0",
    "eslint-plugin-perfectionist": "^1.4.0",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "prettier": "^3.0.0",
    "react": "^18.2.0",
    "turbo": "^1.10.12",
    "typescript": "^5.1.5"
  },
  "prettier": {
    "singleQuote": true
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "plugins": [
      "@typescript-eslint",
      "simple-import-sort"
    ],
    "extends": [
      "eslint:recommended",
      "plugin:@typescript-eslint/recommended"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": 0,
      "@typescript-eslint/no-explicit-any": 0,
      "@typescript-eslint/explicit-module-boundary-types": 0,
      "@typescript-eslint/no-non-null-assertion": 0,
      "simple-import-sort/imports": "warn",
      "simple-import-sort/exports": "warn"
    }
  },
  "config": {
    "commitizen": {
      "types": [
        {
          "value": "feat",
          "name": "feat:     New feature"
        },
        {
          "value": "fix",
          "name": "fix:      Bug fix"
        },
        {
          "value": "improve",
          "name": "improve:  Improves feature or performance"
        },
        {
          "value": "docs",
          "name": "docs:     Documentation only changes"
        },
        {
          "value": "refactor",
          "name": "refactor: Code refactoring"
        },
        {
          "value": "chore",
          "name": "chore:    Other changes that don't modify src or test files"
        }
      ],
      "skipQuestions": [
        "scope",
        "body",
        "footerPrefix",
        "footer"
      ]
    }
  }
}
